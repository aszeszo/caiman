<?xml version="1.0"?>
<!--
CDDL HEADER START

The contents of this file are subject to the terms of the
Common Development and Distribution License (the "License").
You may not use this file except in compliance with the License.

You can obtain a copy of the license at usr/src/OPENSOLARIS.LICENSE
or http://www.opensolaris.org/os/licensing.
See the License for the specific language governing permissions
and limitations under the License.

When distributing Covered Code, include this CDDL HEADER in each
file and include the License file at usr/src/OPENSOLARIS.LICENSE.
If applicable, add the following below this CDDL HEADER, with the
fields enclosed by brackets "[]" replaced with your own identifying
information: Portions Copyright [yyyy] [name of copyright owner]

CDDL HEADER END

Copyright (c) 2008, 2012, Oracle and/or its affiliates. All rights reserved.
-->
<!--
===============================================================================
DTD sample manifest for Automatic Installer input manifest specification.
===============================================================================
-->
<!DOCTYPE auto_install SYSTEM "file:///usr/share/install/ai.dtd.@DTD_VERSION_AI@">
<auto_install>
  <!--
        "auto_reboot" set to "true" may be an issue for x86 machines.
        The boot order is not guaranteed and may cause unexpected
        behavior. If auto_reboot is not desired, set auto_reboot="false".

        The name of the manifest is obtained from (in this order):
        1) the name from the installadm create-manifest
           command line "-m" option.
        2) a name attribute in the manifest, e.g.: 
           <ai_instance name="my_ai_manifest" auto_reboot="true">
        3) manifest filename 
    -->
  <ai_instance auto_reboot="true">
    <!--
      =======================================================================
      <target> - selections for AI target Device specification

      Disk criteria are divided into three mutually exclusive groups:

      G1 - deterministic disk criteria
      ................................
        * disk/iscsi parameters
        * disk/disk_name, with name_type attribute:
          one of ctd, volid, devpath, devid, or receptacle

      G2 - non-deterministic disk criteria
      ..........................
        * disk/disk_prop: Any of dev_type, dev_vendor, dev_chassis, or
          dev_size

      G3 - keyword disk criteria
      ...........................
        * disk/disk_keyword: "boot_disk"

      Schema ai.dtd enforces following policy:

      * criteria in group G1 are mutually exclusive - only
        one can be specified at a time

      * groups G1, G2 and G3 are mutually exclusive - i.e.
        if criteria from G1 is specified, no criteria
        from G2 or G3 are allowed and vice versa

      * multiple criteria from G2 can be specified
      =======================================================================
    -->
    <target>
      <!--
        use whole_disk="true" if you do not wish to specify <partition>
        or <slice> children.
      -->
      <!--
      <disk whole_disk="true">
      -->
        <!-- G1 -->
        <!--
          c#t#d# device name like c0t0d0 or 
          MPXIO name like c0t2000002037CD9F72d0
        -->
        <!--
        <disk_name name="c1t0d0" name_type="ctd"/>
        -->
        <!-- volume name set for instance by means
          of format(1M) command
        -->
        <!--
        <disk_name name="ai-disk" name_type="volid"/>
        -->
        <!-- device id - e.g. can be obtained by means of
          iostat(1M) -iEn
        -->
        <!--
        <disk_name name="id1,cmdk@AST31000340NS=____________9QJ2LNYY" name_type="devid"/>
        -->
        <!-- device path under /devices directory, e.g.
          /pci@1e,600000/pci@0/pci@9/pci@0/scsi@1/sd@0,0
        -->
        <!--
        <disk_name name="/pci@0/pci@9/pci@0/scsi@1/sd@0,0" name_type="devpath"/>
        -->
        <!--
          ISCSI target device

          DHCP Rootpath
        <iscsi source="dhcp"/>

          with static-discovery
        <iscsi target_name="<iqn string>" target_lun="0" target_ip="192.168.1.34"/>

          with sendtargets
        <iscsi target_lun="0" target_ip="192.168.1.34"/>

          with setting the initiator-node name

        <iscsi target_lun="0" target_ip="192.168.1.34" initiator_name="iqn.1986-03.com.sun:01:e00000000000.4d94f3bd/>

          with setting the CHAP username and password

        <iscsi target_lun="0" target_ip="192.168.1.34" initiator_name="iqn.1986-03.com.sun:01:e00000000000.4d94f3bd chap_name="chapname" chap_password="chappassword />
        -->
        <!-- receptacle name - e.g. can be obtained by means of 
          croinfo(1M) -o cR
        -->
        <!--
        <disk_name name="SYS/HD2" name_type="receptacle"/>
        -->

        <!-- G2 -->
        <!--
        <disk_prop dev_vendor="hitachi" dev_size="20480mb"/>

        or 

        <disk_prop dev_vendor="hitachi"/>

        or

        <disk_prop dev_size="20480mb"/>
        -->

        <!-- receptacle name - e.g. can be obtained by means of 
          croinfo(1M) -o cA
        -->
        <!--
        <disk_prop dev_chassis="SYS"/>
        -->

        <!-- G3 -->
        <!--
        <disk_keyword key="boot_disk"/>
        -->
        <!--
          On X86 machines, Slices exist within partitions only
        -->
        <!--
          Uncomment this to force AI to find an existing Solaris
          partition.
        -->
        <!--
        <partition action="use_existing_solaris2">
          <slice name="0">
            <size val="20480mb"/>
          </slice>
          <slice name="4">
            <size val="20480mb"/>
          </slice>
        </partition>

        or, use the following to create a Solaris partition.
        Remember to set whole_disk="false" in the parent <disk> element.
        -->
        <!--
        <partition name="1" part_type="191">
          <size start_sector="200" val="40960mb"/>
          <slice name="0">
            <size val="20480mb"/>
          </slice>
          <slice name="4">
            <size val="20480mb"/>
          </slice>
        </partition>
        -->
        <!-- Define some other partitions to create too -->
        <!-- 
        <partition name="2" part_type="99">
          <size start_sector="200" val="20480mb"/>
        </partition>
        <partition name="4" part_type="99">
          <size start_sector="2000" val="20480mb"/>
        </partition>
        -->
        <!--
        On SPARC systems, only specify the Slice layout.
        -->
        <!--
            <slice name="0">
              <size val="20480mb"/>
            </slice>
            <slice name="4">
              <size val="20480mb"/>
            </slice>
        -->
      <!--
      </disk>
      -->
      <logical>
        <zpool name="rpool" is_root="true">
          <!--
            Subsequent <filesystem> entries instruct an installer to create
            following ZFS datasets:

                <root_pool>/export         (mounted on /export)
                <root_pool>/export/home    (mounted on /export/home)

            Those datasets are part of standard environment and should be
            always created.

            In rare cases, if there is a need to deploy an installed system
            without these datasets, either comment out or remove <filesystem>
            entries. In such scenario, it has to be also assured that
            in case of non-interactive post-install configuration, creation
            of initial user account is disabled in related system
            configuration profile. Otherwise the installed system would fail
            to boot.
          -->
          <filesystem name="export" mountpoint="/export"/>
          <filesystem name="export/home"/>
          <be name="solaris"/>
        </zpool>
      </logical>
    </target>
    <software name="ips" type="IPS">
      <!--

      Language localizations are selected using package facets.  The below
      stanza selects the languages that are standard on Solaris installation.

      -->
      <destination>
        <image>
          <facet set="false">facet.locale.*</facet>
          <facet set="true">facet.locale.de</facet>
          <facet set="true">facet.locale.de_DE</facet>
          <facet set="true">facet.locale.en</facet>
          <facet set="true">facet.locale.en_US</facet>
          <facet set="true">facet.locale.es</facet>
          <facet set="true">facet.locale.es_ES</facet>
          <facet set="true">facet.locale.fr</facet>
          <facet set="true">facet.locale.fr_FR</facet>
          <facet set="true">facet.locale.it</facet>
          <facet set="true">facet.locale.it_IT</facet>
          <facet set="true">facet.locale.ja</facet>
          <facet set="true">facet.locale.ja_*</facet>
          <facet set="true">facet.locale.ko</facet>
          <facet set="true">facet.locale.ko_*</facet>
          <facet set="true">facet.locale.pt</facet>
          <facet set="true">facet.locale.pt_BR</facet>
          <facet set="true">facet.locale.zh</facet>
          <facet set="true">facet.locale.zh_CN</facet>
          <facet set="true">facet.locale.zh_TW</facet>
        </image>
      </destination>
      <source>
        <publisher name="solaris">
          <origin name="http://pkg.oracle.com/solaris/release"/>
        </publisher>
      </source>
      <!--
        By default the latest build available, in the
        specified IPS repository, is installed.
        if another build is required, the build number has
        to be appended to the 'entire' package in following
        form:
      
            <name="entire@0.5.11-0.build#"/>

        It is possible to specify one or more packages that are to be
        rejected, when evaluating what is to be installed, by using one or
        more 'reject' tags, for example:

          <software_data>
            <name>pkg:/entire@latest</name>
            <name>pkg:/group/system/solaris-large-server</name>
            <reject>package/to/reject</reject>
            <reject>another/package/to/reject</reject>
          </software_data>

        this is the equivalent of the 'pkg install -reject' option.

        The main benefit of using the <reject> over an 'uninstall' action is
        that these packages are rejected during the plan for the install
        action as opposed to requiring a new plan like the 'uninstall' action
        does.
      -->
      <software_data>
        <name>pkg:/entire@latest</name>
        <name>pkg:/group/system/solaris-large-server</name>
      </software_data>

      <!--
        It is possible to request that any future install specifically avoids
        any attempts to install some packages that would be otherwise selected
        by the 'install' action (above), or future 'pkg install' commands.

        The avoid list is stored as part of the image, so is persistent. 

        To remove a package from the avoid list, you can use the action of
        'unavoid' to remove it.
       -->
      <!--
      <software_data action="avoid">
        <name>pkg:/unwanted/pkg</name>
      </software_data>
      -->
    </software>
  </ai_instance>
</auto_install>
